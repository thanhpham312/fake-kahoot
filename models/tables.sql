CREATE TABLE IF NOT EXISTS public."ACCOUNTS"
(
  "ACCOUNT_ID" serial NOT NULL UNIQUE,
  "USERNAME" character varying(50) NOT NULL,
  "PASSWORD" character varying(100) NOT NULL,
  CONSTRAINT "ACCOUNTS_pkey" PRIMARY KEY ("ACCOUNT_ID")
);

CREATE TABLE IF NOT EXISTS public."SCORES"
(
  "SCORE_ID" serial NOT NULL UNIQUE,
  "ACCOUNT_ID" bigint NOT NULL,
  "SCORE" numeric NOT NULL,
  "HIGHEST_STREAK" smallint NOT NULL,
  "DATE" date NOT NULL,
  CONSTRAINT "SCORES_pkey" PRIMARY KEY ("SCORE_ID"),
  CONSTRAINT "SCORE_ACCOUNT" FOREIGN KEY ("ACCOUNT_ID")
      REFERENCES public."ACCOUNTS" ("ACCOUNT_ID") MATCH SIMPLE
      ON DELETE NO ACTION ON UPDATE NO ACTION
);

CREATE TABLE IF NOT EXISTS public."QUIZ_CATEGORY"
(
  "QUIZ_CATEGORY_ID" integer NOT NULL UNIQUE,
  "CATEGORY_NAME" character varying(100) NOT NULL,
  CONSTRAINT "QUIZ_CATEGORY_pkey" PRIMARY KEY ("QUIZ_CATEGORY_ID")
);

CREATE TABLE IF NOT EXISTS public."QUIZ_DIFFICULTY"
(
  "DIFFICULTY_ID" integer NOT NULL UNIQUE,
  "DIFFICULTY_LEVEL" character varying NOT NULL,
  CONSTRAINT "QUIZ_DIFFICULTY_pkey" PRIMARY KEY ("DIFFICULTY_ID")
);

CREATE TABLE IF NOT EXISTS public."QUESTIONS"
(
    "QUESTION_ID" bigint NOT NULL DEFAULT nextval('"QUESTIONS_QUESTION_ID_seq"'::regclass),
    "QUESTION_CONTENT" character varying(1000) COLLATE pg_catalog."default",
    "RIGHT_ANSWER" character varying(1000) COLLATE pg_catalog."default",
    "WRONG_ANSWER1" character varying(1000) COLLATE pg_catalog."default",
    "WRONG_ANSWER2" character varying(1000) COLLATE pg_catalog."default",
    "WRONG_ANSWER3" character varying(1000) COLLATE pg_catalog."default",
    "ACCOUNT_ID" bigint,
    "CREATED_DATE" date,
    CONSTRAINT "QUESTIONS_pkey" PRIMARY KEY ("QUESTION_ID"),
    CONSTRAINT "FK_ACCOUNT_QUESTION" FOREIGN KEY ("ACCOUNT_ID")
        REFERENCES public."ACCOUNTS" ("ACCOUNT_ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS public."CUSTOM_QUIZZES"
(
    "CUSTOM_QUIZ_ID" integer NOT NULL DEFAULT nextval('"CUSTOM_QUIZZES_CUSTOM_QUIZ_ID_seq"'::regclass),
    "ACCOUNT_ID" integer NOT NULL,
    "QUIZ_NAME" character varying(100) COLLATE pg_catalog."default" NOT NULL,
    "QUIZ_CATEGORY_ID" integer NOT NULL DEFAULT 0,
    "DIFFICULTY_ID" integer NOT NULL DEFAULT 0,
    "DATE_CREATED" date,
    CONSTRAINT "CUSTOM_QUIZZES_pkey" PRIMARY KEY ("CUSTOM_QUIZ_ID"),
    CONSTRAINT "CUSTOM_QUIZZES_ACCOUNTS" FOREIGN KEY ("ACCOUNT_ID")
        REFERENCES public."ACCOUNTS" ("ACCOUNT_ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "CUSTOM_QUIZZES_QUIZ_CATEGORY" FOREIGN KEY ("QUIZ_CATEGORY_ID")
        REFERENCES public."QUIZ_CATEGORY" ("QUIZ_CATEGORY_ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "CUSTOM_QUIZZES_QUIZ_DIFFICULTY" FOREIGN KEY ("DIFFICULTY_ID")
        REFERENCES public."QUIZ_DIFFICULTY" ("DIFFICULTY_ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE TABLE IF NOT EXISTS public."CUSTOM_QUIZZES_QUESTIONS"
(
    "CUSTOM_QUIZ_ID" integer NOT NULL,
    "QUESTION_ID" integer NOT NULL,
    CONSTRAINT "CUSTOM_QUIZZES_QUESTIONS_pkey" PRIMARY KEY ("CUSTOM_QUIZ_ID", "QUESTION_ID"),
    CONSTRAINT "CUSTOM_QUIZZES" FOREIGN KEY ("CUSTOM_QUIZ_ID")
        REFERENCES public."CUSTOM_QUIZZES" ("CUSTOM_QUIZ_ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT "QUESTIONS" FOREIGN KEY ("QUESTION_ID")
        REFERENCES public."QUESTIONS" ("QUESTION_ID") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);